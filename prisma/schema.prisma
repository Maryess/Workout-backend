generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  createdAt DateTime @default(now()) @map("created_at")
  updatedt  DateTime @default(now()) @map("updated_at")

  name     String
  password String
  image    String[]

  logExercise logExercise[]
  logWorkout  logWorkout[]
}

model Workout {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now()) @map("created_at")
  updatedt  DateTime @default(now()) @map("updated_at")

  exercises  Exercise[]
  logWorkout logWorkout[]
}

model Exercise {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedt  DateTime @default(now()) @map("updated_at")

  name  String
  times Int

  iconPath String    @map("icon_path")
  workout  Workout[]

  logExercise logExercise[]
}

model logExercise {
  id          Int      @id @default(autoincrement())
  isCompleted Boolean  @default(false)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedt    DateTime @default(now()) @map("updated_at")

  times    ExerciseTime[]
  exercise Exercise?      @relation(fields: [exerciseId], references: [id])

  user         User?       @relation(fields: [userId], references: [id])
  userId       Int?
  logWorkout   logWorkout? @relation(fields: [logWorkoutId], references: [id])
  logWorkoutId Int?
  exerciseId   Int?
}

model logWorkout {
  id          Int      @id @default(autoincrement())
  isCompleted Boolean  @default(false)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedt    DateTime @default(now()) @map("updated_at")

  logExercises logExercise[]

  user   User? @relation(fields: [userId], references: [id])
  userId Int?

  workout   Workout? @relation(fields: [workoutId], references: [id])
  workoutId Int?
}

model ExerciseTime {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedt  DateTime @default(now()) @map("updated_at")

  isCompleted Boolean @default(false)
  repeat      Int     @default(0)
  weight      Int     @default(0)

  logExercise   logExercise? @relation(fields: [logExerciseId], references: [id])
  logExerciseId Int?         @map("log_exercise_id")
}
